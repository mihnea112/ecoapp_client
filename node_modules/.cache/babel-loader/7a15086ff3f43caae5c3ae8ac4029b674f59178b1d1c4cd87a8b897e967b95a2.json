{"ast":null,"code":"var _jsxFileName = \"/Users/mihneasmacbookair/Desktop/ecoapp/ecoapp_client/src/Result.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Spinner from \"./Spinner\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Result() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [detectionData, setDetectionData] = useState(\"null\");\n  return;\n  /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: detectionData === \"null\" ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this) :\n    /*#__PURE__*/\n    //     directorsData.directors.map((director, i) => (\n    //         <tr key={i}>\n    //             <td>{director.name}</td>\n    //             <td>{director.role}</td>\n    //         </tr>\n    _jsxDEV(\"h2\", {\n      children: \"nimic\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(Result, \"081YohjFPxwPQXq2cIGwkDr7I90=\", false, function () {\n  return [useParams];\n});\n_c = Result;\nexport default Result;\nvar _c;\n$RefreshReg$(_c, \"Result\");","map":{"version":3,"names":["React","useState","useParams","Spinner","jsxDEV","_jsxDEV","Fragment","_Fragment","Result","_s","id","detectionData","setDetectionData","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/mihneasmacbookair/Desktop/ecoapp/ecoapp_client/src/Result.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Spinner from \"./Spinner\";\n\nfunction Result() {\n  const { id } = useParams();\n  const [detectionData, setDetectionData] = useState(\"null\");\n\n  return\n  <>\n    {detectionData === \"null\" ? (\n      <Spinner/>\n    ) : (\n      //     directorsData.directors.map((director, i) => (\n      //         <tr key={i}>\n      //             <td>{director.name}</td>\n      //             <td>{director.role}</td>\n      //         </tr>\n      <h2>nimic</h2>\n    )}\n  </>\n}\n\nexport default Result\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAeC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,OAAO,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEhC,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EAChB,MAAM;IAAEC;EAAG,CAAC,GAAGR,SAAS,CAAC,CAAC;EAC1B,MAAM,CAACS,aAAa,EAAEC,gBAAgB,CAAC,GAAGX,QAAQ,CAAC,MAAM,CAAC;EAE1D;EACA,aAAAI,OAAA,CAAAE,SAAA;IAAAM,QAAA,EACGF,aAAa,KAAK,MAAM,gBACvBN,OAAA,CAACF,OAAO;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;IAAA;IAEV;IACA;IACA;IACA;IACA;IACAZ,OAAA;MAAAQ,QAAA,EAAI;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI;EACd,gBACD,CAAC;AACL;AAACR,EAAA,CAjBQD,MAAM;EAAA,QACEN,SAAS;AAAA;AAAAgB,EAAA,GADjBV,MAAM;AAmBf,eAAeA,MAAM;AAAA,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}